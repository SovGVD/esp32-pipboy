#ifndef monofonto11pt7b_H
#define monofonto11pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t monofonto11pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0xFF, 0xFF, 0xFC, 0x05, 0xFF, 0xDE, 0xF7, 0xBD, 0x80, 0x0C,
  0xC1, 0x98, 0x32, 0x06, 0x40, 0x98, 0x7F, 0xDF, 0xF0, 0xC8, 0x13, 0x0F,
  0xF9, 0xFE, 0x7F, 0xC3, 0x20, 0x4C, 0x19, 0x83, 0x30, 0x08, 0x04, 0x0F,
  0x8F, 0xEE, 0x3F, 0x1F, 0x81, 0xE0, 0x7C, 0x1F, 0x87, 0xE0, 0xF0, 0x3F,
  0x0F, 0x8E, 0xFF, 0x7F, 0x1F, 0x02, 0x01, 0x00, 0x70, 0x1F, 0x0F, 0x63,
  0x6C, 0x6D, 0x99, 0xB2, 0x36, 0xC7, 0xD0, 0x77, 0xC1, 0xFC, 0x2D, 0x8D,
  0xB1, 0x36, 0x66, 0xD8, 0xDB, 0x1F, 0xC1, 0xC0, 0x1E, 0x07, 0xE0, 0xCC,
  0x19, 0x83, 0x30, 0x7C, 0x07, 0x81, 0xE0, 0x7E, 0x4D, 0xDD, 0x9F, 0x71,
  0xEE, 0x38, 0xFF, 0x1F, 0xF1, 0xE7, 0xF8, 0x23, 0x36, 0x66, 0xEC, 0xCC,
  0xCC, 0xCC, 0xCC, 0xE6, 0x67, 0x33, 0x4C, 0xC6, 0x66, 0x73, 0x33, 0x33,
  0x33, 0x33, 0x76, 0x6E, 0xCC, 0x0E, 0x01, 0x80, 0x10, 0xF2, 0x7F, 0xFE,
  0x1C, 0x03, 0xC0, 0xD8, 0x71, 0xC6, 0x30, 0x08, 0x04, 0x02, 0x01, 0x0F,
  0xFF, 0xFC, 0x20, 0x10, 0x08, 0x04, 0x00, 0xFF, 0x6D, 0x80, 0xFF, 0xFF,
  0xF8, 0xFF, 0x80, 0x00, 0x60, 0x18, 0x03, 0x00, 0xC0, 0x18, 0x03, 0x00,
  0xC0, 0x18, 0x06, 0x00, 0xC0, 0x10, 0x06, 0x00, 0xC0, 0x30, 0x06, 0x01,
  0x80, 0x30, 0x06, 0x01, 0x80, 0x30, 0x0C, 0x00, 0x3E, 0x3F, 0xBF, 0xFC,
  0x7E, 0x3F, 0x1F, 0x8F, 0xC7, 0xE3, 0xF1, 0xF8, 0xFC, 0x7E, 0x3F, 0xFD,
  0xFC, 0x7C, 0x08, 0xDF, 0xFD, 0xCC, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63,
  0x3E, 0x3F, 0x9F, 0xDC, 0x7E, 0x38, 0x1C, 0x0E, 0x0E, 0x0F, 0x07, 0x07,
  0x03, 0x83, 0x81, 0xFD, 0xFF, 0xFF, 0x3E, 0x3F, 0x9F, 0xDC, 0x70, 0x38,
  0x1C, 0x0C, 0x0C, 0x07, 0x01, 0xC0, 0xF8, 0x3E, 0x3F, 0xFD, 0xFC, 0x7C,
  0x0F, 0x0F, 0x87, 0xC3, 0xE3, 0x71, 0xB9, 0x9C, 0xCE, 0xC7, 0x63, 0xBF,
  0xFF, 0xF0, 0x70, 0x38, 0x1C, 0x0E, 0xFF, 0x7F, 0xBF, 0xDC, 0x0E, 0x07,
  0x03, 0xF9, 0xFE, 0xFF, 0xF1, 0xC0, 0xE0, 0x76, 0x3F, 0xF9, 0xFC, 0x78,
  0x07, 0x07, 0x07, 0x03, 0x83, 0x81, 0x81, 0xF8, 0xFE, 0xF7, 0xF1, 0xF8,
  0xFC, 0x7E, 0x3B, 0xFD, 0xFC, 0x7C, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0x70,
  0x38, 0x38, 0x1C, 0x1E, 0x0E, 0x07, 0x07, 0x03, 0x81, 0xC1, 0xC0, 0xE0,
  0x3E, 0x3F, 0x9F, 0xDC, 0x7E, 0x3B, 0x19, 0xFC, 0x7C, 0x7F, 0x71, 0xF0,
  0x78, 0x3E, 0x3F, 0xFD, 0xFC, 0x7C, 0x3E, 0x3F, 0xBF, 0xDC, 0x7E, 0x3F,
  0x1F, 0x8F, 0xFF, 0x7F, 0x1F, 0x81, 0x81, 0xC1, 0xC0, 0xE0, 0xE0, 0xF0,
  0x5F, 0xA0, 0x02, 0xFF, 0x80, 0x37, 0x73, 0x00, 0x00, 0x76, 0x66, 0x6E,
  0x00, 0x80, 0xC1, 0xE3, 0xC7, 0x87, 0x03, 0x01, 0xE0, 0x3C, 0x07, 0x80,
  0xE0, 0x10, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0x80, 0x60,
  0x3C, 0x07, 0x80, 0xF0, 0x1C, 0x06, 0x0F, 0x1E, 0x3C, 0x38, 0x10, 0x00,
  0x7D, 0xFF, 0xFE, 0x30, 0x61, 0xC7, 0x9E, 0x38, 0x60, 0x00, 0x03, 0x07,
  0x0E, 0x18, 0x0F, 0x07, 0xF9, 0xC3, 0x30, 0x34, 0x07, 0x9E, 0x72, 0xCE,
  0x49, 0xC9, 0x79, 0x69, 0x3F, 0x30, 0x06, 0x00, 0x60, 0x06, 0x00, 0x40,
  0x1C, 0x0E, 0x07, 0x07, 0xC3, 0xE1, 0xF0, 0xD8, 0xEC, 0x77, 0x3B, 0x9D,
  0xCF, 0xEF, 0xFF, 0x1F, 0x8F, 0xC7, 0xFE, 0x7F, 0xBF, 0xDC, 0x7E, 0x3F,
  0x1B, 0x9D, 0xFC, 0xFF, 0x71, 0xB8, 0xFC, 0x7E, 0x3F, 0xFF, 0xFD, 0xFC,
  0x3E, 0x3F, 0xBF, 0xFC, 0x7E, 0x07, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38,
  0x1C, 0x0E, 0x3F, 0xFD, 0xFC, 0x7C, 0xFE, 0x7F, 0xBF, 0xFC, 0x7E, 0x3F,
  0x1F, 0x8F, 0xC7, 0xE3, 0xF1, 0xF8, 0xFC, 0x7E, 0x3F, 0xFF, 0xFD, 0xFC,
  0xFF, 0xFF, 0xFF, 0xFC, 0x0E, 0x07, 0x03, 0x81, 0xFC, 0xFE, 0x7F, 0x38,
  0x1C, 0x0E, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x0E, 0x07,
  0x03, 0x81, 0xFE, 0xFF, 0x7F, 0xB8, 0x1C, 0x0E, 0x07, 0x03, 0x81, 0xC0,
  0x3E, 0x3F, 0xBF, 0xFC, 0x7E, 0x07, 0x03, 0x81, 0xCF, 0xE7, 0xF3, 0xF8,
  0xFC, 0x7E, 0x3F, 0xFD, 0xFE, 0x7B, 0xE3, 0xF1, 0xF8, 0xFC, 0x7E, 0x3F,
  0x1F, 0x8F, 0xFF, 0xFF, 0xFF, 0xF8, 0xFC, 0x7E, 0x3F, 0x1F, 0x8F, 0xC7,
  0xFF, 0xFF, 0xF9, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x9F,
  0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
  0x07, 0x07, 0x0E, 0xFE, 0xFC, 0xF8, 0xE3, 0xF1, 0xB9, 0xDC, 0xCE, 0xE7,
  0x63, 0xF1, 0xF8, 0xFC, 0x77, 0x3B, 0x9D, 0xCE, 0x77, 0x3B, 0x8F, 0xC7,
  0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38,
  0x1C, 0x0E, 0x07, 0xFF, 0xFF, 0xFF, 0xE3, 0xF1, 0xF8, 0xFE, 0xFF, 0x7F,
  0xBF, 0xFF, 0xBB, 0xDD, 0xEE, 0xF2, 0x79, 0x3C, 0x9E, 0x0F, 0x07, 0x83,
  0xE3, 0xF9, 0xFC, 0xFE, 0x7F, 0xBF, 0xDF, 0xEF, 0xFF, 0xFF, 0xF7, 0xFB,
  0xFD, 0xFE, 0x7F, 0x3F, 0x8F, 0xC7, 0x3E, 0x3F, 0xBF, 0xFC, 0x7E, 0x3F,
  0x1F, 0x8F, 0xC7, 0xE3, 0xF1, 0xF8, 0xFC, 0x7E, 0x3F, 0xFD, 0xFC, 0x7C,
  0xFE, 0x7F, 0xBF, 0xFC, 0x7E, 0x3F, 0x1F, 0x8F, 0xC7, 0xFF, 0xFF, 0xBE,
  0x1C, 0x0E, 0x07, 0x03, 0x81, 0xC0, 0x3E, 0x3F, 0xBF, 0xFC, 0x7E, 0x3F,
  0x1F, 0x8F, 0xC7, 0xE3, 0xF1, 0xF8, 0xFC, 0x7E, 0x3F, 0xFD, 0xFC, 0x7C,
  0x06, 0x03, 0x80, 0xC0, 0xFE, 0x3F, 0xCF, 0xFB, 0x8E, 0xE3, 0xB8, 0xEE,
  0x3B, 0x9E, 0xFF, 0x3F, 0x0F, 0xE3, 0xB8, 0xEF, 0x39, 0xCE, 0x7B, 0x8F,
  0x3E, 0x3F, 0x9F, 0xFC, 0x7E, 0x07, 0x01, 0xE0, 0xFC, 0x1F, 0x03, 0xC0,
  0xE0, 0x3E, 0x3F, 0xFD, 0xFC, 0x7C, 0xFF, 0xFF, 0xFF, 0xE3, 0x81, 0xC0,
  0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38,
  0xE3, 0xF1, 0xF8, 0xFC, 0x7E, 0x3F, 0x1F, 0x8F, 0xC7, 0xE3, 0xF1, 0xF8,
  0xFC, 0x7E, 0x3F, 0xBD, 0xFC, 0x7C, 0xE0, 0xEE, 0x19, 0xC7, 0x38, 0xE7,
  0x1C, 0x73, 0x0E, 0xE1, 0xDC, 0x3B, 0x83, 0x60, 0x7C, 0x0F, 0x81, 0xF0,
  0x1E, 0x03, 0x80, 0x70, 0xE0, 0xFC, 0x1D, 0x83, 0x32, 0x66, 0x4C, 0xEB,
  0x9F, 0xF3, 0xFE, 0x7F, 0xCF, 0x78, 0xEE, 0x1D, 0xC3, 0xB8, 0x77, 0x0C,
  0x61, 0x8C, 0xE3, 0xF1, 0xDD, 0xCE, 0xE7, 0x71, 0xF0, 0xF8, 0x38, 0x1C,
  0x1F, 0x0F, 0x8E, 0xE7, 0x73, 0xBB, 0x8F, 0xC7, 0xF1, 0xEE, 0x39, 0xC7,
  0x1D, 0xC3, 0xB8, 0x77, 0x07, 0xC0, 0xF8, 0x0E, 0x01, 0xC0, 0x38, 0x07,
  0x00, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x7F, 0xDF, 0xF7, 0xF8, 0x0E, 0x07,
  0x81, 0xC0, 0x70, 0x38, 0x0E, 0x07, 0x01, 0xC0, 0xF0, 0x38, 0x0F, 0xF7,
  0xFF, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
  0xFF, 0xC0, 0x0C, 0x01, 0x80, 0x18, 0x03, 0x00, 0x60, 0x06, 0x00, 0xC0,
  0x0C, 0x01, 0x80, 0x10, 0x03, 0x00, 0x60, 0x06, 0x00, 0xC0, 0x0C, 0x01,
  0x80, 0x30, 0x03, 0x00, 0x60, 0x06, 0xFF, 0x33, 0x33, 0x33, 0x33, 0x33,
  0x33, 0x33, 0x33, 0x33, 0xFF, 0x1C, 0x0E, 0x0D, 0x86, 0xC6, 0x33, 0x1B,
  0x06, 0xFF, 0xFF, 0xFC, 0xE3, 0x8C, 0x70, 0x3E, 0x3F, 0xBF, 0xE0, 0x77,
  0xFF, 0xFF, 0xFF, 0xC7, 0xE3, 0xBE, 0xDF, 0x60, 0xE0, 0x70, 0x38, 0x1C,
  0x0E, 0x07, 0x7B, 0xFD, 0xFF, 0xE3, 0xF0, 0xF8, 0x7C, 0x3E, 0x3F, 0xFF,
  0xFD, 0xDC, 0x1F, 0x3F, 0xDF, 0xDC, 0x0E, 0x06, 0x03, 0x81, 0xC2, 0x7F,
  0x3F, 0xC7, 0xC0, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x3B, 0xDD, 0xFF, 0xFF,
  0xE3, 0xE1, 0xF0, 0xF8, 0x7E, 0x3F, 0xFD, 0xFE, 0x77, 0x3E, 0x3F, 0xBF,
  0xFC, 0x7C, 0x1F, 0xFF, 0x01, 0xC0, 0xFF, 0xBF, 0x8F, 0x80, 0x0F, 0x8F,
  0xCF, 0xE7, 0x03, 0x87, 0xF3, 0xF9, 0xFC, 0x38, 0x1C, 0x0E, 0x07, 0x03,
  0x81, 0xC0, 0xE0, 0x70, 0x39, 0xBE, 0xFF, 0x7C, 0x7E, 0x3E, 0x1F, 0x8F,
  0xC7, 0xFF, 0xBF, 0xCE, 0xE0, 0x7F, 0xFF, 0xF9, 0xF8, 0xE0, 0x70, 0x38,
  0x1C, 0x0E, 0x07, 0x7B, 0xFF, 0xFF, 0xE3, 0xF1, 0xF8, 0xFC, 0x7E, 0x3F,
  0x1F, 0x8F, 0xC7, 0x18, 0x70, 0x60, 0x00, 0x1F, 0x3E, 0x7C, 0x38, 0x70,
  0xE1, 0xC3, 0x9F, 0xFF, 0xFF, 0x0C, 0x30, 0xC0, 0x01, 0xF7, 0xDF, 0x0C,
  0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0F, 0xFF, 0xFE, 0xE0, 0x70, 0x38, 0x1C,
  0x0E, 0x07, 0x3F, 0x9D, 0xDC, 0xEC, 0x7E, 0x3F, 0x1F, 0x8E, 0xE7, 0x7B,
  0x9D, 0xC7, 0xFF, 0xFE, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63,
  0xDB, 0xFF, 0xFF, 0xF9, 0x3C, 0x9E, 0x4F, 0x27, 0x93, 0xC9, 0xE4, 0xF2,
  0x60, 0xEF, 0x7F, 0xFF, 0xFC, 0x7E, 0x3F, 0x1F, 0x8F, 0xC7, 0xE3, 0xF1,
  0xF8, 0xE0, 0x3E, 0x3F, 0xBF, 0xFC, 0x7E, 0x3E, 0x0F, 0x8F, 0xC7, 0xFF,
  0xBF, 0x8F, 0x80, 0xCE, 0x6F, 0xBF, 0xFC, 0x7C, 0x3E, 0x1F, 0x0F, 0xC7,
  0xFF, 0xEF, 0xB3, 0x98, 0x0C, 0x06, 0x03, 0x00, 0x3B, 0xBF, 0xFF, 0xFC,
  0x7C, 0x3E, 0x1F, 0x0F, 0xC7, 0xFF, 0xBF, 0xDE, 0xE0, 0x70, 0x38, 0x1C,
  0x0E, 0xEF, 0x7F, 0xBF, 0xFC, 0x4E, 0x07, 0x03, 0x81, 0xC0, 0xE0, 0x70,
  0x38, 0x00, 0x3E, 0x3F, 0x98, 0xCC, 0x07, 0x81, 0xF0, 0x3C, 0x07, 0xE3,
  0xBF, 0x8F, 0x80, 0x38, 0x1C, 0x0E, 0x1F, 0xEF, 0xF7, 0xF8, 0xE0, 0x70,
  0x38, 0x1C, 0x0E, 0x03, 0xF1, 0xF8, 0xFC, 0xE3, 0xF1, 0xF8, 0xFC, 0x7E,
  0x3F, 0x1F, 0x8F, 0xC7, 0xF7, 0xBF, 0x8F, 0x80, 0xE1, 0xF1, 0xF8, 0xEC,
  0x67, 0x73, 0xB8, 0xD8, 0x7C, 0x3E, 0x0E, 0x07, 0x00, 0xE4, 0xEC, 0x99,
  0xD3, 0x3A, 0xE7, 0x7C, 0xFF, 0x8F, 0xE1, 0xDC, 0x3B, 0x87, 0x70, 0xEE,
  0x00, 0xE3, 0xB9, 0x9D, 0xC6, 0xC3, 0xE0, 0xE0, 0xF8, 0x6C, 0x77, 0x31,
  0xB8, 0xE0, 0xE1, 0xF1, 0xF8, 0xEC, 0x67, 0x33, 0xB8, 0xD8, 0x7C, 0x3E,
  0x0F, 0x07, 0x03, 0x81, 0xC1, 0xC0, 0xE0, 0xFF, 0xFF, 0xBF, 0xC1, 0xC0,
  0xC0, 0xE0, 0xE0, 0x70, 0x7F, 0xBF, 0xFF, 0xE0, 0x04, 0xF3, 0xCC, 0x30,
  0xC3, 0x0C, 0x30, 0xC3, 0x38, 0xE3, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x3C,
  0xF1, 0xC0, 0xFF, 0xFF, 0xF8, 0x83, 0xCF, 0x0C, 0x30, 0xC3, 0x0C, 0x30,
  0xC3, 0x07, 0x1C, 0xF3, 0x0C, 0x30, 0xC3, 0x0C, 0xF3, 0xCE, 0x00, 0x78,
  0x3F, 0xFE, 0x0F, 0x00 };

const GFXglyph monofonto11pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,  11,    0,    0 },   // 0x20 ' '
  {     1,   3,  16,  11,    4,  -15 },   // 0x21 '!'
  {     7,   5,   5,  11,    3,  -15 },   // 0x22 '"'
  {    11,  11,  16,  11,    0,  -15 },   // 0x23 '#'
  {    33,   9,  20,  11,    1,  -17 },   // 0x24 '$'
  {    56,  11,  17,  11,    0,  -16 },   // 0x25 '%'
  {    80,  11,  16,  11,    0,  -15 },   // 0x26 '&'
  {   102,   1,   5,  11,    5,  -15 },   // 0x27 '''
  {   103,   4,  22,  11,    5,  -17 },   // 0x28 '('
  {   114,   4,  22,  11,    2,  -17 },   // 0x29 ')'
  {   125,  11,  10,  11,    0,  -15 },   // 0x2A '*'
  {   139,   9,  10,  11,    1,  -12 },   // 0x2B '+'
  {   151,   3,   6,  11,    4,   -2 },   // 0x2C ','
  {   154,   7,   3,  11,    2,   -9 },   // 0x2D '-'
  {   157,   3,   3,  11,    4,   -2 },   // 0x2E '.'
  {   159,  11,  21,  11,    0,  -16 },   // 0x2F '/'
  {   188,   9,  16,  11,    1,  -15 },   // 0x30 '0'
  {   206,   5,  16,  11,    2,  -15 },   // 0x31 '1'
  {   216,   9,  16,  11,    1,  -15 },   // 0x32 '2'
  {   234,   9,  16,  11,    1,  -15 },   // 0x33 '3'
  {   252,   9,  16,  11,    1,  -15 },   // 0x34 '4'
  {   270,   9,  16,  11,    1,  -15 },   // 0x35 '5'
  {   288,   9,  16,  11,    1,  -15 },   // 0x36 '6'
  {   306,   9,  16,  11,    1,  -15 },   // 0x37 '7'
  {   324,   9,  16,  11,    1,  -15 },   // 0x38 '8'
  {   342,   9,  16,  11,    1,  -15 },   // 0x39 '9'
  {   360,   3,  11,  11,    4,  -10 },   // 0x3A ':'
  {   365,   4,  14,  11,    3,  -10 },   // 0x3B ';'
  {   372,   9,  12,  11,    1,  -13 },   // 0x3C '<'
  {   386,   9,   7,  11,    1,  -10 },   // 0x3D '='
  {   394,   9,  12,  11,    1,  -13 },   // 0x3E '>'
  {   408,   7,  16,  11,    2,  -15 },   // 0x3F '?'
  {   422,  11,  16,  11,    0,  -12 },   // 0x40 '@'
  {   444,   9,  16,  11,    1,  -15 },   // 0x41 'A'
  {   462,   9,  16,  11,    1,  -15 },   // 0x42 'B'
  {   480,   9,  16,  11,    1,  -15 },   // 0x43 'C'
  {   498,   9,  16,  11,    1,  -15 },   // 0x44 'D'
  {   516,   9,  16,  11,    1,  -15 },   // 0x45 'E'
  {   534,   9,  16,  11,    1,  -15 },   // 0x46 'F'
  {   552,   9,  16,  11,    1,  -15 },   // 0x47 'G'
  {   570,   9,  16,  11,    1,  -15 },   // 0x48 'H'
  {   588,   7,  16,  11,    2,  -15 },   // 0x49 'I'
  {   602,   8,  16,  11,    2,  -15 },   // 0x4A 'J'
  {   618,   9,  16,  11,    1,  -15 },   // 0x4B 'K'
  {   636,   9,  16,  11,    1,  -15 },   // 0x4C 'L'
  {   654,   9,  16,  11,    1,  -15 },   // 0x4D 'M'
  {   672,   9,  16,  11,    1,  -15 },   // 0x4E 'N'
  {   690,   9,  16,  11,    1,  -15 },   // 0x4F 'O'
  {   708,   9,  16,  11,    1,  -15 },   // 0x50 'P'
  {   726,   9,  19,  11,    1,  -15 },   // 0x51 'Q'
  {   748,  10,  16,  11,    1,  -15 },   // 0x52 'R'
  {   768,   9,  16,  11,    1,  -15 },   // 0x53 'S'
  {   786,   9,  16,  11,    1,  -15 },   // 0x54 'T'
  {   804,   9,  16,  11,    1,  -15 },   // 0x55 'U'
  {   822,  11,  16,  11,    0,  -15 },   // 0x56 'V'
  {   844,  11,  16,  11,    0,  -15 },   // 0x57 'W'
  {   866,   9,  16,  11,    1,  -15 },   // 0x58 'X'
  {   884,  11,  16,  11,    0,  -15 },   // 0x59 'Y'
  {   906,  10,  16,  11,    0,  -15 },   // 0x5A 'Z'
  {   926,   4,  22,  11,    6,  -17 },   // 0x5B '['
  {   937,  11,  21,  11,    0,  -16 },   // 0x5C '\'
  {   966,   4,  22,  11,    1,  -17 },   // 0x5D ']'
  {   977,   9,   7,  11,    1,  -15 },   // 0x5E '^'
  {   985,  11,   2,  11,    0,    3 },   // 0x5F '_'
  {   988,   5,   4,  11,    3,  -15 },   // 0x60 '`'
  {   991,   9,  11,  11,    1,  -10 },   // 0x61 'a'
  {  1004,   9,  16,  11,    1,  -15 },   // 0x62 'b'
  {  1022,   9,  11,  11,    1,  -10 },   // 0x63 'c'
  {  1035,   9,  16,  11,    1,  -15 },   // 0x64 'd'
  {  1053,   9,  11,  11,    1,  -10 },   // 0x65 'e'
  {  1066,   9,  16,  11,    1,  -15 },   // 0x66 'f'
  {  1084,   9,  15,  11,    1,  -10 },   // 0x67 'g'
  {  1101,   9,  16,  11,    1,  -15 },   // 0x68 'h'
  {  1119,   7,  16,  11,    2,  -15 },   // 0x69 'i'
  {  1133,   6,  20,  11,    2,  -15 },   // 0x6A 'j'
  {  1148,   9,  16,  11,    1,  -15 },   // 0x6B 'k'
  {  1166,   5,  16,  11,    2,  -15 },   // 0x6C 'l'
  {  1176,   9,  11,  11,    1,  -10 },   // 0x6D 'm'
  {  1189,   9,  11,  11,    1,  -10 },   // 0x6E 'n'
  {  1202,   9,  11,  11,    1,  -10 },   // 0x6F 'o'
  {  1215,   9,  15,  11,    1,  -10 },   // 0x70 'p'
  {  1232,   9,  15,  11,    1,  -10 },   // 0x71 'q'
  {  1249,   9,  11,  11,    1,  -10 },   // 0x72 'r'
  {  1262,   9,  11,  11,    1,  -10 },   // 0x73 's'
  {  1275,   9,  14,  11,    1,  -13 },   // 0x74 't'
  {  1291,   9,  11,  11,    1,  -10 },   // 0x75 'u'
  {  1304,   9,  11,  11,    1,  -10 },   // 0x76 'v'
  {  1317,  11,  11,  11,    0,  -10 },   // 0x77 'w'
  {  1333,   9,  11,  11,    1,  -10 },   // 0x78 'x'
  {  1346,   9,  15,  11,    1,  -10 },   // 0x79 'y'
  {  1363,   9,  11,  11,    1,  -10 },   // 0x7A 'z'
  {  1376,   6,  23,  11,    4,  -18 },   // 0x7B '{'
  {  1394,   1,  21,  11,    5,  -16 },   // 0x7C '|'
  {  1397,   6,  23,  11,    1,  -18 },   // 0x7D '}'
  {  1415,  11,   3,  11,    0,   -8 } }; // 0x7E '~'

const GFXfont monofonto11pt7b PROGMEM = {
  (uint8_t  *)monofonto11pt7bBitmaps,
  (GFXglyph *)monofonto11pt7bGlyphs,
  0x20, 0x7E, 26 };

// Approx. 2092 bytes

#endif // monofonto11pt7b_H
