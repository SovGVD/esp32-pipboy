#ifndef monofonto12pt7b_H
#define monofonto12pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t monofonto12pt7bBitmaps[] PROGMEM = {
  0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x60, 0x06, 0xFF, 0x60, 0x99, 0x99,
  0x99, 0x06, 0x60, 0x46, 0x0C, 0xC0, 0xCC, 0x0C, 0xC3, 0xFF, 0x3F, 0xE1,
  0x98, 0x19, 0x81, 0x98, 0x7F, 0xCF, 0xFC, 0x33, 0x03, 0x30, 0x33, 0x06,
  0x20, 0x66, 0x00, 0x0C, 0x03, 0x01, 0xE0, 0xFE, 0x7F, 0xBC, 0x7E, 0x1F,
  0x80, 0xF0, 0x1F, 0x03, 0xF0, 0x7E, 0x07, 0xC0, 0xF0, 0x1F, 0x87, 0xF1,
  0xDF, 0xF7, 0xF8, 0x78, 0x0C, 0x03, 0x00, 0x78, 0x01, 0xE0, 0x6C, 0xC3,
  0x33, 0x0C, 0xCC, 0x63, 0x33, 0x0C, 0xCC, 0x33, 0x60, 0x79, 0xF9, 0xED,
  0xE0, 0x6C, 0xC1, 0xB3, 0x0C, 0xCC, 0x33, 0x31, 0x8C, 0xCC, 0x33, 0x30,
  0x79, 0x81, 0xE0, 0x1E, 0x03, 0xF0, 0x33, 0x83, 0x18, 0x33, 0x83, 0xB0,
  0x1F, 0x01, 0xE0, 0x3E, 0x07, 0x62, 0x67, 0x7E, 0x3E, 0xE3, 0xCE, 0x3C,
  0x7F, 0xC7, 0xFE, 0x3C, 0x70, 0xFF, 0xF0, 0x19, 0xCC, 0x67, 0x31, 0x8C,
  0xE7, 0x39, 0xCE, 0x73, 0x8C, 0x63, 0x1C, 0x63, 0x1C, 0x62, 0xC7, 0x18,
  0xC7, 0x18, 0xC6, 0x39, 0xCE, 0x73, 0x9C, 0xE6, 0x31, 0x9C, 0xC6, 0x73,
  0x08, 0x06, 0x00, 0x60, 0x06, 0x04, 0x66, 0xFF, 0xF7, 0xFC, 0x07, 0x00,
  0xF8, 0x19, 0xC3, 0x8E, 0x10, 0x80, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C,
  0x3F, 0xFF, 0xFC, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x47, 0x66, 0xEE, 0xC0,
  0xFF, 0xFF, 0xFF, 0x6F, 0xF6, 0x00, 0x30, 0x06, 0x00, 0x60, 0x0E, 0x00,
  0xC0, 0x0C, 0x01, 0x80, 0x18, 0x03, 0x00, 0x30, 0x07, 0x00, 0x60, 0x06,
  0x00, 0xC0, 0x0C, 0x01, 0xC0, 0x18, 0x03, 0x80, 0x30, 0x03, 0x00, 0x60,
  0x06, 0x00, 0xE0, 0x00, 0x3F, 0x1F, 0xE7, 0xFB, 0x8F, 0xE1, 0xF8, 0x7E,
  0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0xF7, 0xF9, 0xFE,
  0x3F, 0x00, 0x0C, 0x77, 0xFF, 0xFE, 0x71, 0xC7, 0x1C, 0x71, 0xC7, 0x1C,
  0x71, 0xC7, 0x1C, 0x1E, 0x1F, 0xE7, 0xF9, 0xC7, 0xE1, 0xC0, 0x70, 0x3C,
  0x0E, 0x07, 0x81, 0xC0, 0xE0, 0x38, 0x1C, 0x0F, 0x03, 0xFD, 0xFF, 0xFF,
  0xC0, 0x1E, 0x1F, 0xE7, 0xF9, 0x87, 0x81, 0xC0, 0x70, 0x18, 0x1E, 0x07,
  0x00, 0xE0, 0x1C, 0x07, 0xE1, 0xF8, 0x77, 0xFD, 0xFE, 0x1E, 0x00, 0x0F,
  0x03, 0xC1, 0xF0, 0x6C, 0x3B, 0x0C, 0xC7, 0x31, 0x8C, 0x63, 0x30, 0xCF,
  0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0x7F, 0x9F, 0xE7,
  0xF9, 0x80, 0x60, 0x18, 0x07, 0xF1, 0xFE, 0x7F, 0x98, 0x70, 0x1C, 0x07,
  0x21, 0xD8, 0xFF, 0xF9, 0xFC, 0x3E, 0x00, 0x07, 0x83, 0xC0, 0xE0, 0x70,
  0x1C, 0x0E, 0x03, 0xC1, 0xFE, 0x7F, 0xBC, 0xFE, 0x1F, 0x87, 0xE1, 0xF8,
  0x77, 0xF9, 0xFE, 0x1E, 0x00, 0xFF, 0xFF, 0xFF, 0xFC, 0x0E, 0x03, 0x81,
  0xC0, 0x70, 0x3C, 0x0E, 0x03, 0x81, 0xE0, 0x70, 0x1C, 0x0F, 0x03, 0x81,
  0xE0, 0x78, 0x00, 0x1E, 0x1F, 0xE7, 0xF9, 0x86, 0x61, 0x98, 0x67, 0xF8,
  0xFC, 0x7F, 0xBC, 0xFE, 0x1F, 0x87, 0xE1, 0xF8, 0x7F, 0xFD, 0xFE, 0x1F,
  0x00, 0x1E, 0x1F, 0xE7, 0xFB, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0xFF, 0x7F,
  0x8F, 0xE0, 0x70, 0x3C, 0x0E, 0x07, 0x81, 0xC0, 0xF0, 0x78, 0x00, 0x6F,
  0xF6, 0x00, 0x00, 0x6F, 0xF6, 0x67, 0x76, 0x00, 0x00, 0x86, 0xEE, 0xCC,
  0xC0, 0x00, 0x40, 0x30, 0x3C, 0x3C, 0x7C, 0x3C, 0x0C, 0x03, 0xC0, 0x3C,
  0x03, 0xC0, 0x3C, 0x03, 0x00, 0x40, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00,
  0x3F, 0xFF, 0xFC, 0x80, 0x30, 0x0F, 0x00, 0xF0, 0x0F, 0x80, 0xF0, 0x0C,
  0x0F, 0x0F, 0x0F, 0x0F, 0x03, 0x00, 0x80, 0x00, 0x3C, 0x7F, 0xFF, 0xE7,
  0x07, 0x07, 0x0F, 0x1E, 0x3C, 0x38, 0x38, 0x00, 0x00, 0x18, 0x38, 0x38,
  0x38, 0x0F, 0x83, 0xFC, 0x30, 0x66, 0x02, 0x60, 0x34, 0x03, 0xC7, 0x3C,
  0xD3, 0xC9, 0x3C, 0x93, 0xCF, 0xA4, 0x6E, 0x60, 0x06, 0x00, 0x30, 0x01,
  0xC0, 0x08, 0x00, 0x1E, 0x07, 0x81, 0xE0, 0x78, 0x3F, 0x0F, 0xC3, 0xF0,
  0xFC, 0x37, 0x1C, 0xE7, 0x39, 0xFE, 0x7F, 0x9F, 0xEE, 0x3F, 0x87, 0xE1,
  0xC0, 0xFE, 0x3F, 0xEF, 0xFB, 0x8E, 0xE3, 0xB8, 0xEE, 0x3B, 0xFC, 0xFF,
  0x38, 0xEE, 0x1F, 0x87, 0xE1, 0xF8, 0xFF, 0xFB, 0xFE, 0xFE, 0x00, 0x3E,
  0x1F, 0xE7, 0xFB, 0xC7, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x38, 0x0E,
  0x03, 0x80, 0xE0, 0x3C, 0xF7, 0xF9, 0xFE, 0x3F, 0x00, 0xFF, 0x3F, 0xEF,
  0xFB, 0x8F, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87,
  0xE1, 0xF8, 0x7F, 0xFB, 0xFE, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0,
  0xE0, 0xE0, 0xFE, 0xFE, 0xFE, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xFE, 0xFE, 0xFE, 0xE0, 0xE0,
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1E, 0x1F, 0xE7, 0xFB, 0xC7, 0xE0, 0x38,
  0x0E, 0x03, 0x9F, 0xE7, 0xF9, 0xFE, 0x1F, 0x87, 0xE1, 0xF8, 0x77, 0xFD,
  0xFF, 0x3D, 0xC0, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F,
  0xFF, 0xFF, 0xFF, 0xFE, 0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1,
  0xC0, 0xFF, 0xFF, 0xFF, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
  0x1C, 0x1C, 0x1C, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07,
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFF, 0xFE, 0xFC, 0xF1,
  0xFC, 0xEF, 0x3B, 0xDC, 0xF7, 0x3D, 0x8F, 0xE3, 0xF0, 0xFE, 0x3F, 0x8F,
  0xE3, 0xDC, 0xF7, 0x3D, 0xEF, 0x3B, 0xCF, 0xF1, 0xC0, 0xE0, 0x70, 0x38,
  0x1C, 0x0E, 0x07, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07,
  0x03, 0xFF, 0xFF, 0xFF, 0x80, 0xE1, 0xF8, 0x7F, 0x3F, 0xCF, 0xF3, 0xFF,
  0xFF, 0xFF, 0xFB, 0xFE, 0xFF, 0xBE, 0xCF, 0xB3, 0xEC, 0xF9, 0x3E, 0x0F,
  0x83, 0xE0, 0xC0, 0xF1, 0xFC, 0x7F, 0x9F, 0xE7, 0xF9, 0xFF, 0x7F, 0xDF,
  0xF7, 0xFF, 0xFB, 0xFE, 0xFF, 0x9F, 0xE7, 0xF9, 0xFE, 0x3F, 0x8F, 0xE1,
  0xC0, 0x1E, 0x1F, 0xE7, 0xFB, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1,
  0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x77, 0xF9, 0xFE, 0x3F, 0x00, 0xFF,
  0x3F, 0xEF, 0xFF, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xFF, 0xFF, 0xEF,
  0xF3, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x00, 0x1E, 0x1F, 0xE7,
  0xFB, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87,
  0xE1, 0xF8, 0x77, 0xF9, 0xFE, 0x3F, 0x00, 0xC0, 0x30, 0x0E, 0xFE, 0x3F,
  0xEF, 0xFF, 0x8F, 0xE1, 0xF8, 0x7E, 0x1F, 0x8F, 0xFF, 0xBF, 0xCF, 0xE3,
  0xBC, 0xEF, 0x39, 0xEE, 0x7B, 0x8F, 0xE3, 0xC0, 0x1F, 0x1F, 0xE7, 0xFB,
  0x87, 0xE0, 0x38, 0x07, 0x81, 0xF8, 0x3F, 0x83, 0xF0, 0x3C, 0x07, 0xE1,
  0xFC, 0x77, 0xFD, 0xFE, 0x1F, 0x00, 0xFF, 0xFF, 0xFF, 0xFC, 0x78, 0x1E,
  0x07, 0x81, 0xE0, 0x78, 0x1E, 0x07, 0x81, 0xE0, 0x78, 0x1E, 0x07, 0x81,
  0xE0, 0x78, 0x1E, 0x00, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7E,
  0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7F, 0xFD, 0xFE,
  0x3F, 0x00, 0xF0, 0xF7, 0x0E, 0x70, 0xE7, 0x0E, 0x38, 0xC3, 0x9C, 0x39,
  0xC3, 0x9C, 0x3D, 0xC1, 0xF8, 0x1F, 0x81, 0xF8, 0x1F, 0x80, 0xF0, 0x0F,
  0x00, 0xF0, 0x0F, 0x00, 0xE0, 0x7F, 0x0F, 0x70, 0xE7, 0x2E, 0x72, 0xE7,
  0x6E, 0x76, 0xE7, 0x6E, 0x7F, 0xE7, 0xFE, 0x3F, 0xC3, 0xFC, 0x3D, 0xC3,
  0x9C, 0x39, 0xC3, 0x9C, 0x39, 0xC0, 0xF1, 0xFC, 0xF7, 0x39, 0xEE, 0x3F,
  0x0F, 0xC3, 0xF0, 0x78, 0x1E, 0x07, 0x83, 0xF0, 0xFC, 0x3F, 0x1C, 0xE7,
  0x3B, 0xCF, 0xE3, 0xC0, 0xF0, 0xF7, 0x0E, 0x79, 0xE3, 0x9C, 0x39, 0xC3,
  0xFC, 0x1F, 0x81, 0xF8, 0x0F, 0x00, 0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x00,
  0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x00, 0xFF, 0xFF, 0xFF, 0xF8, 0x1E, 0x07,
  0x01, 0xC0, 0xF0, 0x38, 0x1E, 0x07, 0x03, 0xC0, 0xE0, 0x78, 0x1E, 0x07,
  0xFF, 0xFF, 0xFF, 0xC0, 0xFF, 0xF9, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCE,
  0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73, 0xFF, 0xC0, 0x06, 0x00, 0x60, 0x07,
  0x00, 0x30, 0x03, 0x00, 0x18, 0x01, 0x80, 0x0C, 0x00, 0xC0, 0x0E, 0x00,
  0x60, 0x06, 0x00, 0x30, 0x03, 0x00, 0x38, 0x01, 0x80, 0x1C, 0x00, 0xC0,
  0x0C, 0x00, 0x60, 0x06, 0x00, 0x70, 0xFF, 0xC6, 0x31, 0x8C, 0x63, 0x18,
  0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8F, 0xFF, 0x0C, 0x07, 0x81,
  0xE0, 0xCC, 0x33, 0x18, 0x6E, 0x1F, 0x03, 0xFF, 0xFF, 0xFF, 0xF1, 0xC3,
  0x87, 0x1F, 0x1F, 0xE7, 0xFC, 0x87, 0x01, 0xDF, 0xF7, 0xFF, 0x87, 0xE1,
  0xF8, 0xF7, 0xFC, 0xF7, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x39, 0xCE,
  0xFB, 0xFF, 0xF1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xFC, 0x7F, 0xFF, 0xBE,
  0xE7, 0x00, 0x1F, 0x0F, 0xF7, 0xFB, 0xC2, 0xE0, 0x38, 0x0E, 0x03, 0x80,
  0xF0, 0x9F, 0xE3, 0xFC, 0x7C, 0x01, 0xC0, 0x70, 0x1C, 0x07, 0x01, 0xCE,
  0x77, 0xDF, 0xFF, 0xE3, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0xFF, 0xFD,
  0xF7, 0x39, 0xC0, 0x1E, 0x1F, 0xE7, 0xFB, 0x87, 0xE1, 0xFF, 0xFE, 0x03,
  0x80, 0xE1, 0xDF, 0xE7, 0xF8, 0x78, 0x0F, 0xC7, 0xF1, 0xFC, 0x60, 0x18,
  0x3F, 0xCF, 0xF3, 0xFC, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01,
  0x80, 0x60, 0x18, 0x00, 0x3D, 0xDF, 0xFF, 0xFF, 0x8F, 0xE1, 0xF8, 0x7E,
  0x1F, 0x87, 0xE3, 0xFF, 0xF7, 0xDC, 0xF7, 0x01, 0xD0, 0xFF, 0xFB, 0xFE,
  0x3E, 0x00, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x39, 0xEE, 0xFB, 0xFF,
  0xF1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xC0,
  0x18, 0x1C, 0x1C, 0x18, 0x00, 0xFC, 0xFC, 0xFC, 0x1C, 0x1C, 0x1C, 0x1C,
  0x1C, 0x1C, 0xFF, 0xFF, 0xFF, 0x06, 0x1C, 0x38, 0x30, 0x0F, 0xDF, 0xBF,
  0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x3F, 0xFF, 0xDF,
  0x00, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x38, 0xEE, 0x73, 0x9C, 0xEE,
  0x3F, 0x0F, 0xC3, 0xF8, 0xEE, 0x3B, 0xCE, 0x73, 0x8E, 0xE3, 0xC0, 0xFF,
  0xFE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73, 0x9C, 0xE7, 0x38, 0xD9, 0xFF,
  0xFF, 0xFF, 0x33, 0xCC, 0xF3, 0x3C, 0xCF, 0x33, 0xCC, 0xF3, 0x3C, 0xCF,
  0x33, 0xE7, 0xBB, 0xEF, 0xFF, 0xC7, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1,
  0xF8, 0x7E, 0x1F, 0x87, 0x1E, 0x1F, 0xE7, 0xFB, 0xCF, 0xE1, 0xF8, 0x7E,
  0x1F, 0x87, 0xF3, 0xDF, 0xE7, 0xF8, 0x78, 0xEF, 0x3F, 0xEF, 0xFB, 0x8F,
  0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE3, 0xFF, 0xEF, 0xFB, 0xBC, 0xE0, 0x38,
  0x0E, 0x03, 0x80, 0xE0, 0x00, 0x39, 0xDF, 0x7F, 0xFF, 0x8F, 0xE1, 0xF8,
  0x7E, 0x1F, 0x87, 0xE3, 0xFF, 0xF7, 0xDC, 0xE7, 0x01, 0xC0, 0x70, 0x1C,
  0x07, 0x01, 0xC0, 0xE7, 0x3B, 0xEF, 0xFF, 0xC4, 0xE0, 0x38, 0x0E, 0x03,
  0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0x7C, 0x7F, 0xB1, 0xDC, 0x0F, 0x03,
  0xF0, 0xFC, 0x1E, 0x03, 0xF3, 0xBF, 0xCF, 0x80, 0x1C, 0x0E, 0x07, 0x1F,
  0xEF, 0xF7, 0xF8, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x81, 0xF8, 0xFC,
  0x3E, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1,
  0xDF, 0xE7, 0xF8, 0xF8, 0xE1, 0xF8, 0x7E, 0x1D, 0xCE, 0x73, 0x9C, 0xE3,
  0xB0, 0xFC, 0x3F, 0x07, 0x81, 0xE0, 0x78, 0xE2, 0x77, 0x2E, 0x76, 0xE7,
  0x6E, 0x76, 0xE7, 0x6E, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0x9C, 0x39, 0xC1,
  0x98, 0xE1, 0xDC, 0xE7, 0x38, 0xFC, 0x3E, 0x07, 0x81, 0xE0, 0xFC, 0x3F,
  0x1C, 0xE7, 0x3B, 0x87, 0xE1, 0xF8, 0x7E, 0x1D, 0xC6, 0x73, 0x9C, 0xE3,
  0xB8, 0xFC, 0x3F, 0x07, 0xC1, 0xE0, 0x78, 0x1E, 0x07, 0x01, 0xC0, 0x70,
  0x3C, 0x00, 0xFF, 0xFF, 0xEF, 0xF0, 0x1C, 0x0E, 0x03, 0x81, 0xC0, 0x70,
  0x38, 0x1F, 0xF7, 0xFF, 0xFF, 0x0E, 0x3C, 0xE1, 0xC1, 0x83, 0x06, 0x0C,
  0x18, 0x73, 0xC7, 0x0F, 0x07, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC3, 0x83,
  0x07, 0x87, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xE1, 0xE0, 0xC1, 0xC3,
  0x06, 0x0C, 0x18, 0x30, 0x70, 0x78, 0x71, 0xE7, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0x83, 0x86, 0x3C, 0x70, 0xF8, 0x7F, 0xF8, 0x7C };

const GFXglyph monofonto12pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,  12,    0,    0 },   // 0x20 ' '
  {     1,   4,  17,  12,    4,  -16 },   // 0x21 '!'
  {    10,   4,   6,  12,    4,  -16 },   // 0x22 '"'
  {    13,  12,  17,  12,    0,  -16 },   // 0x23 '#'
  {    39,  10,  22,  12,    1,  -19 },   // 0x24 '$'
  {    67,  14,  18,  12,   -1,  -17 },   // 0x25 '%'
  {    99,  12,  17,  12,    0,  -16 },   // 0x26 '&'
  {   125,   2,   6,  12,    5,  -16 },   // 0x27 '''
  {   127,   5,  24,  12,    5,  -18 },   // 0x28 '('
  {   142,   5,  24,  12,    2,  -18 },   // 0x29 ')'
  {   157,  12,  11,  12,    0,  -16 },   // 0x2A '*'
  {   174,  10,  11,  12,    1,  -13 },   // 0x2B '+'
  {   188,   4,   7,  12,    4,   -3 },   // 0x2C ','
  {   192,   8,   3,  12,    2,   -9 },   // 0x2D '-'
  {   195,   4,   4,  12,    4,   -3 },   // 0x2E '.'
  {   197,  12,  23,  12,    0,  -18 },   // 0x2F '/'
  {   232,  10,  17,  12,    1,  -16 },   // 0x30 '0'
  {   254,   6,  17,  12,    2,  -16 },   // 0x31 '1'
  {   267,  10,  17,  12,    1,  -16 },   // 0x32 '2'
  {   289,  10,  17,  12,    1,  -16 },   // 0x33 '3'
  {   311,  10,  17,  12,    1,  -16 },   // 0x34 '4'
  {   333,  10,  17,  12,    1,  -16 },   // 0x35 '5'
  {   355,  10,  17,  12,    1,  -16 },   // 0x36 '6'
  {   377,  10,  17,  12,    1,  -16 },   // 0x37 '7'
  {   399,  10,  17,  12,    1,  -16 },   // 0x38 '8'
  {   421,  10,  17,  12,    1,  -16 },   // 0x39 '9'
  {   443,   4,  12,  12,    4,  -11 },   // 0x3A ':'
  {   449,   4,  15,  12,    4,  -11 },   // 0x3B ';'
  {   457,  10,  13,  12,    1,  -14 },   // 0x3C '<'
  {   474,  10,   7,  12,    1,  -11 },   // 0x3D '='
  {   483,  10,  13,  12,    1,  -14 },   // 0x3E '>'
  {   500,   8,  17,  12,    2,  -16 },   // 0x3F '?'
  {   517,  12,  17,  12,    0,  -13 },   // 0x40 '@'
  {   543,  10,  17,  12,    1,  -16 },   // 0x41 'A'
  {   565,  10,  17,  12,    1,  -16 },   // 0x42 'B'
  {   587,  10,  17,  12,    1,  -16 },   // 0x43 'C'
  {   609,  10,  17,  12,    1,  -16 },   // 0x44 'D'
  {   631,   8,  17,  12,    2,  -16 },   // 0x45 'E'
  {   648,   8,  17,  12,    2,  -16 },   // 0x46 'F'
  {   665,  10,  17,  12,    1,  -16 },   // 0x47 'G'
  {   687,  10,  17,  12,    1,  -16 },   // 0x48 'H'
  {   709,   8,  17,  12,    2,  -16 },   // 0x49 'I'
  {   726,   8,  17,  12,    2,  -16 },   // 0x4A 'J'
  {   743,  10,  17,  12,    1,  -16 },   // 0x4B 'K'
  {   765,   9,  17,  12,    2,  -16 },   // 0x4C 'L'
  {   785,  10,  17,  12,    1,  -16 },   // 0x4D 'M'
  {   807,  10,  17,  12,    1,  -16 },   // 0x4E 'N'
  {   829,  10,  17,  12,    1,  -16 },   // 0x4F 'O'
  {   851,  10,  17,  12,    1,  -16 },   // 0x50 'P'
  {   873,  10,  20,  12,    1,  -16 },   // 0x51 'Q'
  {   898,  10,  17,  12,    1,  -16 },   // 0x52 'R'
  {   920,  10,  17,  12,    1,  -16 },   // 0x53 'S'
  {   942,  10,  17,  12,    1,  -16 },   // 0x54 'T'
  {   964,  10,  17,  12,    1,  -16 },   // 0x55 'U'
  {   986,  12,  17,  12,    0,  -16 },   // 0x56 'V'
  {  1012,  12,  17,  12,    0,  -16 },   // 0x57 'W'
  {  1038,  10,  17,  12,    1,  -16 },   // 0x58 'X'
  {  1060,  12,  17,  12,    0,  -16 },   // 0x59 'Y'
  {  1086,  10,  17,  12,    1,  -16 },   // 0x5A 'Z'
  {  1108,   5,  24,  12,    6,  -18 },   // 0x5B '['
  {  1123,  12,  23,  12,    0,  -18 },   // 0x5C '\'
  {  1158,   5,  24,  12,    1,  -18 },   // 0x5D ']'
  {  1173,  10,   8,  12,    1,  -16 },   // 0x5E '^'
  {  1183,  12,   2,  12,    0,    4 },   // 0x5F '_'
  {  1186,   6,   4,  12,    3,  -16 },   // 0x60 '`'
  {  1189,  10,  12,  12,    1,  -11 },   // 0x61 'a'
  {  1204,  10,  17,  12,    1,  -16 },   // 0x62 'b'
  {  1226,  10,  12,  12,    1,  -11 },   // 0x63 'c'
  {  1241,  10,  17,  12,    1,  -16 },   // 0x64 'd'
  {  1263,  10,  12,  12,    1,  -11 },   // 0x65 'e'
  {  1278,  10,  17,  12,    1,  -16 },   // 0x66 'f'
  {  1300,  10,  17,  12,    1,  -11 },   // 0x67 'g'
  {  1322,  10,  17,  12,    1,  -16 },   // 0x68 'h'
  {  1344,   8,  17,  12,    2,  -16 },   // 0x69 'i'
  {  1361,   7,  22,  12,    2,  -16 },   // 0x6A 'j'
  {  1381,  10,  17,  12,    1,  -16 },   // 0x6B 'k'
  {  1403,   5,  17,  12,    3,  -16 },   // 0x6C 'l'
  {  1414,  10,  12,  12,    1,  -11 },   // 0x6D 'm'
  {  1429,  10,  12,  12,    1,  -11 },   // 0x6E 'n'
  {  1444,  10,  12,  12,    1,  -11 },   // 0x6F 'o'
  {  1459,  10,  17,  12,    1,  -11 },   // 0x70 'p'
  {  1481,  10,  17,  12,    1,  -11 },   // 0x71 'q'
  {  1503,  10,  12,  12,    1,  -11 },   // 0x72 'r'
  {  1518,   9,  12,  12,    2,  -11 },   // 0x73 's'
  {  1532,   9,  15,  12,    1,  -14 },   // 0x74 't'
  {  1549,  10,  12,  12,    1,  -11 },   // 0x75 'u'
  {  1564,  10,  12,  12,    1,  -11 },   // 0x76 'v'
  {  1579,  12,  12,  12,    0,  -11 },   // 0x77 'w'
  {  1597,  10,  12,  12,    1,  -11 },   // 0x78 'x'
  {  1612,  10,  17,  12,    1,  -11 },   // 0x79 'y'
  {  1634,  10,  12,  12,    1,  -11 },   // 0x7A 'z'
  {  1649,   7,  24,  12,    4,  -18 },   // 0x7B '{'
  {  1670,   2,  23,  12,    5,  -18 },   // 0x7C '|'
  {  1676,   7,  24,  12,    1,  -18 },   // 0x7D '}'
  {  1697,  10,   3,  12,    1,   -9 } }; // 0x7E '~'

const GFXfont monofonto12pt7b PROGMEM = {
  (uint8_t  *)monofonto12pt7bBitmaps,
  (GFXglyph *)monofonto12pt7bGlyphs,
  0x20, 0x7E, 28 };

// Approx. 2373 bytes

#endif // monofonto12pt7b_H
